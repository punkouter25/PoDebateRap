@using PoDebateRap.Shared.Models
@* Removed: @using MudBlazor *@

<div class="debate-visualizer-paper pa-4"> @* Replace MudPaper with styled div *@
    <div class="row justify-content-center g-3"> @* Replace MudGrid with Bootstrap row/col *@

        <!-- Rapper 1 Profile Area -->
        <div class="col-5 text-center"> @* Replace MudItem *@
            <div class="@($"pa-3 rapper-profile paper-like {(IsRapper1Active ? "active-border" : "")}")"> @* Replace MudPaper *@
                <h5>@(Rapper1?.Name ?? "Rapper 1")</h5> @* Replace MudText *@
                <!-- TODO: Add Blinking Indicator Component -->
                <span class="@($"rapper-mic {(IsRapper1Active ? "blinking active-mic" : "inactive-mic")}")">üé§</span> @* Replace MudIcon *@
                 <!-- TODO: Add Rapper Image/Avatar if available -->
            </div>
        </div>

        <!-- VS Separator -->
        <div class="col-2 d-flex align-items-center justify-content-center"> @* Replace MudItem *@
             <span class="gavel-icon">‚öñÔ∏è</span> @* Replace MudIcon with Unicode Gavel/Scales *@
        </div>

        <!-- Rapper 2 Profile Area -->
        <div class="col-5 text-center"> @* Replace MudItem *@
             <div class="@($"pa-3 rapper-profile paper-like {(IsRapper2Active ? "active-border" : "")}")"> @* Replace MudPaper *@
                <h5>@(Rapper2?.Name ?? "Rapper 2")</h5> @* Replace MudText *@
                 <!-- TODO: Add Blinking Indicator Component -->
                 <span class="@($"rapper-mic {(IsRapper2Active ? "blinking active-mic" : "inactive-mic")}")">üé§</span> @* Replace MudIcon *@
                 <!-- TODO: Add Rapper Image/Avatar if available -->
            </div>
        </div>

        <!-- Debate Text Display Area -->
        <div class="col-12 mt-4"> @* Replace MudItem *@
            <div class="paper-like pa-4 debate-text-area"> @* Replace MudPaper, add style *@
                <pre class="lyrics @(IsNewLyrics ? "fade-in" : "")">@CurrentTurnText</pre>
            </div>
        </div>

        <!-- Progress Indicator Area -->
        <div class="col-12 mt-4"> @* Replace MudItem *@
             <!-- TODO: Add Progress Indicator Component -->
             <p class="text-center text-secondary">Turn @CurrentTurnNumber / @TotalTurns</p> @* Replace MudText *@
             <progress class="debate-progress w-100" value="@CurrentTurnNumber" max="@TotalTurns"></progress> @* Replace MudProgressLinear *@
        </div>

    </div>
</div>

<style>
    .lyrics {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        font-size: 1.1rem;
        line-height: 1.6;
        white-space: pre-wrap;
        word-wrap: break-word;
        margin: 0;
        padding: 1rem;
        background: transparent;
        border: none;
        color: inherit;
        text-align: left;
    }

    .fade-in {
        animation: fadeIn 0.5s ease-in;
    }

    @@keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }

    .debate-text-area {
        min-height: 200px;
        max-height: 400px;
        overflow-y: auto;
        background-color: rgba(0, 0, 0, 0.2);
        border-radius: 8px;
        box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.1);
    }
</style>

@code {
    [Parameter] public Rapper? Rapper1 { get; set; }
    [Parameter] public Rapper? Rapper2 { get; set; }
    [Parameter] public string CurrentTurnText { get; set; } = "The debate hasn't started yet...";
    [Parameter] public bool IsRapper1Active { get; set; } = false;
    [Parameter] public bool IsRapper2Active { get; set; } = false;
    [Parameter] public int CurrentTurnNumber { get; set; } = 0;
    [Parameter] public int TotalTurns { get; set; } = 10;

    private string _previousText = string.Empty;
    private bool IsNewLyrics => CurrentTurnText != _previousText;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        _previousText = CurrentTurnText;
    }
}
